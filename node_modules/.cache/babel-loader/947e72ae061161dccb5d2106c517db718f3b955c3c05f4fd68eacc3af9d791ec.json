{"ast":null,"code":"import _slicedToArray from\"E:/CodeProject/Web Dev/React/TicTacToe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"E:/CodeProject/Web Dev/React/TicTacToe/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useReducer}from'react';import Board from'./Board';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var reducer=function reducer(state,action){switch(action.type){case'MOVE':return _objectSpread(_objectSpread({},state),{},{history:state.history.concat({squares:action.payload.squares}),xIsNext:!state.xIsNext});case'JUMP':return _objectSpread(_objectSpread({},state),{},{xIsNext:action.payload.step%2===0,history:state.history.slice(0,action.payload.step+1)});default:return state;}};export default function Game(){var _useReducer=useReducer(reducer,{xIsNext:true,history:[{squares:Array(9).fill(null)}]}),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var xIsNext=state.xIsNext,history=state.history;var handleClick=function handleClick(i){var current=history[history.length-1];//copy the last board map\nvar squares=current.squares.slice();var winner=calculateWinner(squares);//if there is already a winner or we clicked in the same spot -> ignore the event\nif(winner||squares[i]){return;}squares[i]=xIsNext?'X':'0';dispatch({type:'MOVE',payload:{squares:squares}});};var jumpTo=function jumpTo(step){dispatch({type:'JUMP',payload:{step:step}});};var current=history[history.length-1];var winner=calculateWinner(current.squares);var status=winner?winner==='D'?' Draw':'Winner is '+winner:'Next player is '+(xIsNext?'X':'0');var moves=history.map(function(step,move){var desc=move?'Go to #'+move:'Start the Game';return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return jumpTo(move);},children:desc})},step);});return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:/*#__PURE__*/_jsx(Board,{onClick:function onClick(i){return handleClick(i);},squares:current.squares})}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsx(\"div\",{children:status}),/*#__PURE__*/_jsx(\"ul\",{children:moves})]})]});}var calculateWinner=function calculateWinner(squares){var winnerLines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];var isDraw=true;for(var i=0;i<winnerLines.length;i++){var _winnerLines$i=_slicedToArray(winnerLines[i],3),a=_winnerLines$i[0],b=_winnerLines$i[1],c=_winnerLines$i[2];if(squares[a]&&squares[b]&&squares[c]&&squares[a]===squares[b]&&squares[b]===squares[c]){return squares[a];}if(!squares[a]||!squares[b]||!squares[c]){isDraw=false;}}if(isDraw){return'D';}return null;};","map":{"version":3,"names":["React","useReducer","Board","jsx","_jsx","jsxs","_jsxs","reducer","state","action","type","_objectSpread","history","concat","squares","payload","xIsNext","step","slice","Game","_useReducer","Array","fill","_useReducer2","_slicedToArray","dispatch","handleClick","i","current","length","winner","calculateWinner","jumpTo","status","moves","map","move","desc","children","onClick","className","winnerLines","isDraw","_winnerLines$i","a","b","c"],"sources":["E:/CodeProject/Web Dev/React/TicTacToe/tic-tac-toe/src/Component/Game.js"],"sourcesContent":["import React, { useReducer } from 'react'\r\nimport Board from './Board'\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type)\r\n    {\r\n        case 'MOVE':\r\n            return {...state, history: state.history.concat({squares: action.payload.squares}), xIsNext: !state.xIsNext};\r\n        case 'JUMP':\r\n            return {...state, xIsNext: action.payload.step%2 === 0, history: state.history.slice(0, action.payload.step + 1)};\r\n        default:\r\n            return state;    \r\n    }\r\n}\r\nexport default function Game() {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        xIsNext: true,\r\n        history: [{squares: Array(9).fill(null)}]\r\n    });\r\n    const {xIsNext, history} = state;\r\n    const handleClick = (i) => {\r\n        const current = history[history.length - 1];\r\n        //copy the last board map\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        //if there is already a winner or we clicked in the same spot -> ignore the event\r\n        if(winner || squares[i])\r\n        {\r\n            return;\r\n        }\r\n        squares[i] = xIsNext ? 'X' : '0';\r\n        dispatch({type:'MOVE', payload: {squares}})\r\n    };\r\n\r\n    const jumpTo = (step) => {\r\n        dispatch({type: 'JUMP', payload:{step}});\r\n    }\r\n\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n    const status = winner? winner === 'D' ? ' Draw' : 'Winner is ' + winner : 'Next player is ' + (xIsNext? 'X' : '0');\r\n    const moves = history.map((step, move) => {\r\n        const desc = move? 'Go to #' + move : 'Start the Game';\r\n        return <li key = {step}>\r\n            <button onClick={() => jumpTo(move)}>{desc}</button>\r\n        </li>\r\n    });\r\n  return (\r\n    <div className='game'>\r\n        <div className='game-board'>\r\n            <Board onClick={(i) => handleClick(i)} squares={current.squares}></Board>\r\n        </div>\r\n        <div className='game-info'>\r\n            <div>\r\n            {status}\r\n            </div>\r\n            <ul>\r\n            {moves}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    const winnerLines = [[0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,4,7], [2,5,8], [0,4,8], [2,4,6]];\r\n    let isDraw = true;\r\n    for (let i =0; i < winnerLines.length; i++)\r\n    {\r\n        const [a, b, c] = winnerLines[i];\r\n        if(squares[a] && squares[b] && squares[c] && squares[a] === squares[b] && squares[b] === squares[c]) \r\n        {\r\n            return squares[a];\r\n        }\r\n\r\n        if(!squares[a] || !squares[b] || !squares[c])\r\n        {\r\n            isDraw = false;\r\n        }\r\n    }\r\n\r\n    if (isDraw)\r\n    {\r\n        return 'D';\r\n    }\r\n    return null;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}