{"ast":null,"code":"var _jsxFileName = \"E:\\\\CodeProject\\\\Web Dev\\\\React\\\\TicTacToe\\\\tic-tac-toe\\\\src\\\\Component\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'MOVE':\n      return {\n        ...state,\n        history: state.history.concat({\n          squares: action.payload.squares\n        }),\n        xIsNext: !state.xIsNext\n      };\n    case 'JUMP':\n      return {\n        ...state,\n        xIsNext: action.payload.step % 2 === 0,\n        history: state.history.slice(0, action.payload.step + 1)\n      };\n    default:\n      return state;\n  }\n};\nexport default function Game() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, {\n    xIsNext: true,\n    history: [{\n      squares: Array(9).fill(null)\n    }]\n  });\n  const {\n    xIsNext,\n    history\n  } = state;\n  const handleClick = i => {\n    const current = history[history.length - 1];\n    //copy the last board map\n    const squares = current.squares.slice();\n    const winner = calculateWinner(squares);\n    //if there is already a winner or we clicked in the same spot -> ignore the event\n    if (winner || squares[i]) {\n      return;\n    }\n    squares[i] = xIsNext ? 'X' : '0';\n    dispatch({\n      type: 'MOVE',\n      payload: {\n        squares\n      }\n    });\n  };\n  const jumpTo = step => {\n    dispatch({\n      type: 'JUMP',\n      payload: {\n        step\n      }\n    });\n  };\n  const current = history[history.length - 1];\n  const winner = calculateWinner(current.squares);\n  const status = winner ? winner === 'D' ? ' Draw' : 'Winner is ' + winner : 'Next player is ' + (xIsNext ? 'X' : '0');\n  const moves = history.map((step, move) => {\n    const desc = move ? 'Go to #' + move : 'Start the Game';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, step, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        onClick: i => handleClick(i),\n        squares: current.squares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"Qpxr7vuxMiKoBr8xD82Nt6CTzUI=\");\n_c = Game;\nconst calculateWinner = squares => {\n  const winnerLines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 3, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  let isDraw = true;\n  for (let i = 0; i < winnerLines.length; i++) {\n    const [a, b, c] = winnerLines[i];\n    if (squares[a] && squares[b] && squares[c] && squares[a] === squares[b] && squares[b] === squares[c]) {\n      return squares[a];\n    }\n    if (!squares[a] || !squares[c] || !squares[c]) {\n      isDraw = false;\n    }\n  }\n  if (isDraw) {\n    return 'D';\n  }\n  return null;\n};\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useReducer","Board","jsxDEV","_jsxDEV","reducer","state","action","type","history","concat","squares","payload","xIsNext","step","slice","Game","_s","dispatch","Array","fill","handleClick","i","current","length","winner","calculateWinner","jumpTo","status","moves","map","move","desc","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","winnerLines","isDraw","a","b","c","$RefreshReg$"],"sources":["E:/CodeProject/Web Dev/React/TicTacToe/tic-tac-toe/src/Component/Game.js"],"sourcesContent":["import React, { useReducer } from 'react'\r\nimport Board from './Board'\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type)\r\n    {\r\n        case 'MOVE':\r\n            return {...state, history: state.history.concat({squares: action.payload.squares}), xIsNext: !state.xIsNext};\r\n        case 'JUMP':\r\n            return {...state, xIsNext: action.payload.step%2 === 0, history: state.history.slice(0, action.payload.step + 1)};\r\n        default:\r\n            return state;    \r\n    }\r\n}\r\nexport default function Game() {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        xIsNext: true,\r\n        history: [{squares: Array(9).fill(null)}]\r\n    });\r\n    const {xIsNext, history} = state;\r\n    const handleClick = (i) => {\r\n        const current = history[history.length - 1];\r\n        //copy the last board map\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        //if there is already a winner or we clicked in the same spot -> ignore the event\r\n        if(winner || squares[i])\r\n        {\r\n            return;\r\n        }\r\n        squares[i] = xIsNext ? 'X' : '0';\r\n        dispatch({type:'MOVE', payload: {squares}})\r\n    };\r\n\r\n    const jumpTo = (step) => {\r\n        dispatch({type: 'JUMP', payload:{step}});\r\n    }\r\n\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n    const status = winner? winner === 'D' ? ' Draw' : 'Winner is ' + winner : 'Next player is ' + (xIsNext? 'X' : '0');\r\n    const moves = history.map((step, move) => {\r\n        const desc = move? 'Go to #' + move : 'Start the Game';\r\n        return <li key = {step}>\r\n            <button onClick={() => jumpTo(move)}>{desc}</button>\r\n        </li>\r\n    });\r\n  return (\r\n    <div className='game'>\r\n        <div className='game-board'>\r\n            <Board onClick={(i) => handleClick(i)} squares={current.squares}></Board>\r\n        </div>\r\n        <div className='game-info'>\r\n            <div>\r\n            {status}\r\n            </div>\r\n            <ul>\r\n            {moves}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    const winnerLines = [[0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,3,7], [2,5,8], [0,4,8], [2,4,6]];\r\n    let isDraw = true;\r\n    for (let i =0; i < winnerLines.length; i++)\r\n    {\r\n        const [a, b, c] = winnerLines[i];\r\n        if(squares[a] && squares[b] && squares[c] && squares[a] === squares[b] && squares[b] === squares[c]) \r\n        {\r\n            return squares[a];\r\n        }\r\n\r\n        if(!squares[a] || !squares[c] || !squares[c])\r\n        {\r\n            isDraw = false;\r\n        }\r\n    }\r\n\r\n    if (isDraw)\r\n    {\r\n        return 'D';\r\n    }\r\n    return null;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}